@tailwind base;
@tailwind components;
@tailwind utilities;

/* TailwindCSSでは表現できない複雑なアニメーション */
.piece-flip {
    animation: flip 0.4s ease-in-out;
}

@keyframes flip {
    0% { transform: rotateY(0deg); }
    50% { transform: rotateY(90deg); }
    100% { transform: rotateY(0deg); }
}

/* 新しく置かれた石のアニメーション（プレイヤー用） */
.piece-placed {
    animation: placePiece 0.3s ease-out;
}

@keyframes placePiece {
    0% {
        transform: scale(0) rotate(0deg);
        opacity: 0;
        filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0));
    }
    50% {
        transform: scale(1.3) rotate(180deg);
        opacity: 1;
        filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
    }
    100% {
        transform: scale(1) rotate(360deg);
        opacity: 1;
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
    }
}

/* NPCが置いた石の特別なアニメーション */
.piece-npc-placed {
    animation: npcPlacePiece 0.7s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes npcPlacePiece {
    0% {
        transform: scale(0) rotate(-180deg);
        opacity: 0;
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
    }
    30% {
        transform: scale(1.5) rotate(-90deg);
        opacity: 0.9;
        box-shadow: 0 0 20px 10px rgba(59, 130, 246, 0.4);
    }
    60% {
        transform: scale(1.1) rotate(-20deg);
        opacity: 1;
        box-shadow: 0 0 15px 5px rgba(59, 130, 246, 0.3);
    }
    100% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
    }
}

/* セルの輝きエフェクト（NPCが置いた位置用） */
.cell-npc-highlight {
    animation: cellHighlight 0.8s ease-out;
}

@keyframes cellHighlight {
    0% {
        box-shadow: inset 0 0 0 0 rgba(59, 130, 246, 0);
        background-color: rgb(22, 163, 74); /* green-600 */
    }
    50% {
        box-shadow: inset 0 0 30px 10px rgba(59, 130, 246, 0.6);
        background-color: rgb(59, 130, 246); /* blue-500 */
    }
    100% {
        box-shadow: inset 0 0 0 0 rgba(59, 130, 246, 0);
        background-color: rgb(22, 163, 74); /* green-600 */
    }
}

/* 動的に変更されるグリッドレイアウト用のカスタムプロパティ */
.dynamic-grid {
    display: grid;
    gap: 0.125rem; /* gap-0.5 相当 */
}

/* 有効な手のハイライト効果（TailwindCSSでは表現が困難な複雑なbox-shadow） */
.valid-move-highlight {
    box-shadow: inset 0 0 8px rgba(255, 255, 255, 0.5);
}

/* プレイヤーターン開始時の有効手出現アニメーション */
.valid-move-appear {
    animation: validMoveAppear 0.2s ease-out forwards;
}

@keyframes validMoveAppear {
    0% {
        background-color: rgb(22, 163, 74); /* green-600 */
        box-shadow: inset 0 0 0 rgba(255, 255, 255, 0);
        transform: scale(0.95);
        opacity: 0.8;
    }
    100% {
        background-color: rgb(132, 204, 22); /* lime-500 */
        box-shadow: inset 0 0 8px rgba(255, 255, 255, 0.5);
        transform: scale(1);
        opacity: 1;
    }
}

/* プレイヤーターン終了時の有効手消失アニメーション */
.valid-move-disappear {
    animation: validMoveDisappear 0.2s ease-in forwards;
}

@keyframes validMoveDisappear {
    0% {
        background-color: rgb(132, 204, 22); /* lime-500 */
        box-shadow: inset 0 0 8px rgba(255, 255, 255, 0.5);
        opacity: 1;
    }
    100% {
        background-color: rgb(22, 163, 74); /* green-600 */
        box-shadow: inset 0 0 0 rgba(255, 255, 255, 0);
        opacity: 1;
    }
}

/* NPCターン中のフィードバック表示 */
.npc-turn-feedback {
    animation: npcTurnPulse 1.5s ease-in-out infinite;
}

@keyframes npcTurnPulse {
    0%, 100% {
        opacity: 0.7;
        transform: scale(1);
    }
    50% {
        opacity: 1;
        transform: scale(1.02);
    }
}

/* ターゲットロックシステム */
.target-lock-animation {
    animation: targetLockPulse 1s ease-in-out infinite;
}

.target-lock-outer {
    animation: targetLockRotate 2s linear infinite;
}

.target-lock-inner {
    animation: targetLockRotate 1.5s linear infinite reverse;
}

.target-lock-crosshair {
    animation: targetLockCrosshair 0.8s ease-in-out infinite alternate;
}

@keyframes targetLockPulse {
    0%, 100% {
        opacity: 0.8;
        transform: scale(1);
    }
    50% {
        opacity: 1;
        transform: scale(1.05);
    }
}

@keyframes targetLockRotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes targetLockCrosshair {
    0% {
        opacity: 0.8;
        transform: scale(0.9);
    }
    100% {
        opacity: 1;
        transform: scale(1.1);
    }
}

/* ターゲットロック時のセル強調 */
.target-locked-cell {
    background-color: rgba(22, 163, 74, 0.8) !important; /* green-600 with opacity */
    box-shadow: inset 0 0 10px rgba(239, 68, 68, 0.3) !important;
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
}

/* クリックフィードバック */
.click-feedback {
    animation: clickFeedback 0.5s ease-out forwards;
}

@keyframes clickFeedback {
    0% {
        transform: scale(0.5);
        opacity: 1;
    }
    50% {
        transform: scale(1.5);
        opacity: 0.8;
    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}

/* ターゲットロック確認時の強調 */
.target-lock-confirm {
    animation: targetLockConfirm 0.2s ease-out forwards;
}

@keyframes targetLockConfirm {
    0% {
        transform: scale(1);
        filter: brightness(1);
    }
    50% {
        transform: scale(1.1);
        filter: brightness(1.5) contrast(1.2);
    }
    100% {
        transform: scale(1);
        filter: brightness(1);
    }
}
